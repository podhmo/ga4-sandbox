# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Define variables for string replacement
env:
  FIND_STRING: "hello"
  REPLACE_STRING: |
    hello world
    <!-- This demonstrates multi-line replacement capability -->

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Find and Replace
        shell: bash
        run: |
          # Support multi-line string replacement using variables
          # For multi-line strings, use perl for better handling
          find . -name "*.html" -type f -exec perl -i.bak -pe "s/\Q${{ env.FIND_STRING }}\E/${{ env.REPLACE_STRING }}/g" {} \;
          # Clean up backup files
          find . -name "*.html.bak" -type f -delete
          
          # Future enhancement: Replace placeholders with secrets (multi-line GA4 script example)
          # Example with multi-line replacement:
          # env:
          #   GA4_SCRIPT: |
          #     <!-- Google tag (gtag.js) -->
          #     <script async src="https://www.googletagmanager.com/gtag/js?id=GA_MEASUREMENT_ID"></script>
          #     <script>
          #       window.dataLayer = window.dataLayer || [];
          #       function gtag(){dataLayer.push(arguments);}
          #       gtag('js', new Date());
          #       gtag('config', 'GA_MEASUREMENT_ID');
          #     </script>
          # find . -name "*.html" -type f -exec perl -i.bak -pe "s/GA4_PLACEHOLDER/${{ env.GA4_SCRIPT }}/g" {} \;        
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
